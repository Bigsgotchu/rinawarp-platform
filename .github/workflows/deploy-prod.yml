name: Deploy to Production

on:
  push:
    branches:
      - main
    paths:
      - 'k8s/production/**'
      - '.github/workflows/deploy-prod.yml'
      - 'packages/**'
      - 'api/**'
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  EKS_CLUSTER: rinawarp-production
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: rinawarp/platform

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Create namespace if not exists
        run: kubectl create namespace rinawarp --dry-run=client -o yaml | kubectl apply -f -

      - name: Create image pull secret
        run: |
          kubectl create secret docker-registry ghcr-cred \
            -n rinawarp \
            --docker-server=${{ env.GHCR_REGISTRY }} \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to production
        run: |
          # Set the image in platform.yaml
          sed -i "s|\${GHCR_IMAGE}|${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" k8s/production/platform.yaml
          
          # Apply k8s configurations
          kubectl apply -f k8s/production/

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/platform -n rinawarp
          kubectl get pods -n rinawarp
