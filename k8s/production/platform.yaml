apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
  namespace: rinawarp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: platform
  template:
    metadata:
      labels:
        app: platform
    spec:
      containers:
      - name: platform
        image: ${GHCR_IMAGE}
        imagePullSecrets:
        - name: ghcr-cred
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: platform-config
        - secretRef:
            name: platform-secrets
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        persistentVolumeClaim:
          claimName: platform-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: platform
  namespace: rinawarp
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: platform
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: platform-ingress
  namespace: rinawarp
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.rinawarptech.com
    secretName: platform-tls
  rules:
  - host: api.rinawarptech.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: platform
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: platform-config
  namespace: rinawarp
data:
  NODE_ENV: "production"
  PORT: "3000"
  HOST: "0.0.0.0"
  API_URL: "https://api.rinawarptech.com"
  WEBSITE_URL: "https://rinawarptech.com"
  METRICS_INTERVAL: "60000"
  METRICS_RETENTION: "86400"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: platform-logs-pvc
  namespace: rinawarp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: platform-hpa
  namespace: rinawarp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: platform
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: platform-network-policy
  namespace: rinawarp
spec:
  podSelector:
    matchLabels:
      app: platform
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: redis
    ports:
    - protocol: TCP
      port: 6379
