apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: rinawarp
  namespace: monitoring
spec:
  replicas: 2
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      app: rinawarp
  resources:
    requests:
      memory: 400Mi
    limits:
      memory: 2Gi
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: gp2
        resources:
          requests:
            storage: 50Gi
  alerting:
    alertmanagers:
      - namespace: monitoring
        name: alertmanager
        port: web
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rinawarp
  namespace: monitoring
  labels:
    app: rinawarp
spec:
  selector:
    matchLabels:
      app: rinawarp
  endpoints:
    - port: http
      interval: 15s
      path: /metrics
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rinawarp
  namespace: monitoring
  labels:
    app: rinawarp
spec:
  groups:
    - name: rinawarp.rules
      rules:
        - alert: HighErrorRate
          expr: sum(rate(http_requests_total{status=~"5..",app="rinawarp"}[5m])) / sum(rate(http_requests_total{app="rinawarp"}[5m])) > 0.1
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: High error rate detected
            description: Error rate is above 10% for the last 5 minutes

        - alert: HighLatency
          expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{app="rinawarp"}[5m])) by (le)) > 2
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High latency detected
            description: 95th percentile latency is above 2 seconds

        - alert: HighMemoryUsage
          expr: container_memory_usage_bytes{container="rinawarp"} / container_memory_limit_bytes{container="rinawarp"} > 0.9
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High memory usage
            description: Container memory usage above 90%

        - alert: HighCPUUsage
          expr: sum(rate(container_cpu_usage_seconds_total{container="rinawarp"}[5m])) / sum(container_cpu_limit_seconds{container="rinawarp"}) > 0.8
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High CPU usage
            description: Container CPU usage above 80%

        - alert: PodRestarting
          expr: sum(increase(kube_pod_container_status_restarts_total{container="rinawarp"}[1h])) > 2
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: Pod restarting frequently
            description: Pod has restarted more than 2 times in the last hour
---
apiVersion: monitoring.coreos.com/v1
kind: Alertmanager
metadata:
  name: rinawarp
  namespace: monitoring
spec:
  replicas: 2
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: '${SLACK_WEBHOOK_URL}'
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
        - match:
            severity: critical
          receiver: 'slack-critical'
          continue: true
    receivers:
      - name: 'slack'
        slack_configs:
          - channel: '#alerts'
            title: '{{ template "slack.default.title" . }}'
            text: '{{ template "slack.default.text" . }}'
            send_resolved: true
      - name: 'slack-critical'
        slack_configs:
          - channel: '#alerts-critical'
            title: '{{ template "slack.default.title" . }}'
            text: '{{ template "slack.default.text" . }}'
            send_resolved: true
---
apiVersion: integreatly.org/v1alpha1
kind: Grafana
metadata:
  name: rinawarp
  namespace: monitoring
spec:
  deployment:
    replicas: 1
  ingress:
    enabled: true
    hostname: grafana.rinawarp.com
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      - hosts:
          - grafana.rinawarp.com
        secretName: grafana-tls
  config:
    auth:
      disable_login_form: false
    auth.anonymous:
      enabled: false
    security:
      admin_user: admin
      admin_password: ${GRAFANA_ADMIN_PASSWORD}
  dashboardLabelSelector:
    - matchExpressions:
        - key: app
          operator: In
          values:
            - rinawarp
